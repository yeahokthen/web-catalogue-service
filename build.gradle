plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.polarbookshop'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(24)
	}
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly{
		extendsFrom annotationProcessor
	}
}

ext['reactor-netty.version'] = '1.2.9'
ext {
	set('springCloudVersion', "2025.0.0")
}

dependencies {
	annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
	implementation('org.springframework.boot:spring-boot-starter-web', 'org.springframework.boot:spring-boot-starter-validation', 'org.springframework.boot:spring-boot-starter-webflux','io.projectreactor.netty:reactor-netty-core:1.2.9','io.projectreactor.netty:reactor-netty-http:1.2.9','org.springframework.cloud:spring-cloud-starter-config','org.springframework.retry:spring-retry','org.springframework.boot:spring-boot-starter-actuator','org.springframework.boot:spring-boot-starter-data-jdbc')
	runtimeOnly('org.postgresql:postgresql')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testRuntimeOnly('org.junit.platform:junit-platform-launcher')
}

tasks.named('test') {
	useJUnitPlatform()
}


bootRun{
	systemProperty('spring.profiles.active', 'testData')
}

dependencyManagement {
	imports{
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}